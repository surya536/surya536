import java.util.Comparator;
import java.util.Iterator;
import java.util.Set;
import java.util.TreeSet;
class Person implements Comparator<Person>{
private int age;
private float weight;
private String name;
public Person(int age, float weight, String name) {
super();
this.age = age;
this.weight = weight;
this.name = name;
}
public int getAge() {
return age;
}
public void setAge(int age) {
this.age = age;
}
public float getWeight() {
return weight;
}
public void setWeight(float weight) {
this.weight = weight;
}
public String getName() {
return name;
}
public void setName(String name) {
this.name = name;
}
@Override
public String toString() {
return "Person [age=" + age + ", weight=" + weight + ", name=" + name + "]";
}
@Override
public int compare(Person o1, Person o2) {
// TODO Auto-generated method stub
return 0;
}
}
public class LambdaDemo {
public static void main(String[] args) {
Person personOne=new Person(25,68,"ABC");
Person personTwo=new Person(26,40,"DEF");
Person personThree=new Person(24,91,"GHI");
// TODO Auto-generated method stub
Comparator<Person>cmp=(p1,p2)->{
if (p1.getAge()>p2.getAge())
return 1;
else if(p1.getAge()<p2.getAge())
return -1;
if (p1.getWeight()>p2.getWeight())
return 1;
else if(p1.getWeight()<p2.getWeight())
return -1;
return p1.getName().compareTo(p2.getName());
};
Set <Person>set=new TreeSet<>(cmp);
set.add(personOne);
set.add(personTwo);
set.add(personThree);
Iterator<Person>itr=set.iterator();
while(itr.hasNext()) {
System.out.println(itr);
}
}
}
