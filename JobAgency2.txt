class NotEligibleException extends Exception {
NotEligibleException (String s){
super(s);
}
}
class companyJobRepository{
static String getJobPrediction(int age,String highestQualification)throws
NotEligibleException {
if (age<19){
throw new NotEligibleException("you are underage for any job");
}else if(age>=21 && highestQualification.equals("B.E")) {
return "We have openings for junior developer";
} else if(age>=26 &&
highestQualification.equals("M.S")||highestQualification.equals("PhD")) {
return "We have openings for senior developer";
}else if(age>=19 &&
!(highestQualification.equals("B.E")||highestQualification.equals("PhD")||highestQualifica
tion.equals("M.S"))) {
throw new NotEligibleException("We do not have any job that
matches your qualifications");
}else
return "Sorry we have no openings for now";
}
public String searchForJob(int age,String highestQualification)throws
NotEligibleException {
String message="";
if (age>=200||age<=0) {
throw new NotEligibleException("The age entered is not
typical for a human being ");
}try {
message=companyJobRepository.getJobPrediction(age,
highestQualification);
}catch(NotEligibleException ex) {
message= ex.toString();
}
return message;
}
public static void main(String[] args)throws Exception {
// TODO Auto-generated method stub
Scanner sc=new Scanner(System.in);
System.out.print("Enter the age: ");
int age=sc.nextInt();
System.out.print("Enter the highest Qualification: ");
String highQ=sc.next();
companyJobRepository c=new companyJobRepository();
try {
System.out.print(c.searchForJob(age,highQ));
}catch(NotEligibleException ex) {
System.out.println(ex);
}
sc.close();
}
}
